@{
    ViewBag.Title = "My Leave Requests";
    Layout = "~/Views/Shared/ConsultantNavbar.cshtml";
}

@model Law_Firm_EMS.ViewModels.Consultant.ConsultantLeaveViewModel

<div class="container mx-auto px-4 py-6">
    <h2 class="text-3xl font-bold text-gray-800 mb-6">My Leave Requests</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
            <strong class="font-bold">Success!</strong>
            <span class="block sm:inline">@TempData["SuccessMessage"]</span>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
            <strong class="font-bold">Error!</strong>
            <span class="block sm:inline">@TempData["ErrorMessage"]</span>
        </div>
    }

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div class="bg-white rounded-lg shadow-md p-6">
            <h3 class="text-xl font-semibold text-gray-700 mb-4 border-b pb-3">Leave Application History</h3>

            @if (Model.MyLeaveRequests == null || !Model.MyLeaveRequests.Any())
            {
                <p class="text-gray-500">You haven't submitted any leave requests yet.</p>
            }
            else
            {
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Type
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    From
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    To
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Status
                                </th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var leave in Model.MyLeaveRequests)
                            {
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                        @leave.Type
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        @leave.FromDate.ToShortDateString()
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        @leave.ToDate.ToShortDateString()
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm">
                                        @{
                                            
                                            var statusName = leave.Status?.StatusName;
                                            var displayStatus = string.IsNullOrEmpty(statusName) ? "N/A" : statusName;

                                            
                                            var statusClass = "bg-gray-100 text-gray-800";
                                            if (displayStatus == "Pending") { statusClass = "bg-yellow-100 text-yellow-800"; }
                                            else if (displayStatus == "Accepted") { statusClass = "bg-green-100 text-green-800"; }
                                            else if (displayStatus == "Rejected") { statusClass = "bg-red-100 text-red-800"; }
                                        }
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full @statusClass">
                                            @displayStatus       
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                   </div>
                   }
           </div>

                                                        <div class="bg-white rounded-lg shadow-md p-6">
                                                            <h3 class="text-xl font-semibold text-gray-700 mb-4 border-b pb-3">Apply for New Leave</h3>

                                                            @using (Html.BeginForm("ApplyForLeave", "Consultant", FormMethod.Post, new { @class = "space-y-4" }))
                                                            {
                                                                @Html.AntiForgeryToken()
                                                                @Html.ValidationSummary(false, "", new { @class = "text-red-500 text-sm mb-4" })

                                                                <div>
                                                                    @Html.LabelFor(m => m.LeaveType, new { @class = "block text-sm font-medium text-gray-700" })
                                                                    @Html.DropDownListFor(m => m.LeaveType, Model.AvailableLeaveTypes, "Select Leave Type", new { @class = "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-sky-500 focus:border-sky-500 sm:text-sm rounded-md" })
                                                                    @Html.ValidationMessageFor(m => m.LeaveType, "", new { @class = "text-red-500 text-xs mt-1" })
                                                                </div>

                                                                <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                                                                    <div>
                                                                        @Html.LabelFor(m => m.FromDate, new { @class = "block text-sm font-medium text-gray-700" })
                                                                        @Html.EditorFor(m => m.FromDate, new { htmlAttributes = new { @class = "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-sky-500 focus:border-sky-500 sm:text-sm", type = "date" } })
                                                                        @Html.ValidationMessageFor(m => m.FromDate, "", new { @class = "text-red-500 text-xs mt-1" })
                                                                    </div>
                                                                    <div>
                                                                        @Html.LabelFor(m => m.ToDate, new { @class = "block text-sm font-medium text-gray-700" })
                                                                        @Html.EditorFor(m => m.ToDate, new { htmlAttributes = new { @class = "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-sky-500 focus:border-sky-500 sm:text-sm", type = "date" } })
                                                                        @Html.ValidationMessageFor(m => m.ToDate, "", new { @class = "text-red-500 text-xs mt-1" })
                                                                    </div>
                                                                </div>

                                                                <div class="flex justify-end pt-4">
                                                                    <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-sky-600 hover:bg-sky-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500 transition-colors">
                                                                        Submit Leave Request
                                                                    </button>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>

                                                @section scripts {
                                                    <script>
                                                        if (typeof lucide !== 'undefined') {
                                                            lucide.createIcons();
                                                        }
                                                    </script>
                                                }
