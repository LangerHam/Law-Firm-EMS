@model Law_Firm_EMS.Models.Users
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<head>
    <meta charset="utf-8" />
    <title>User Login</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap" rel="stylesheet">


    <style>
        body {
            margin: 0;
            height: 100vh;
            width: 100vw;
            padding: 0;
            background-color: rgb(249, 252, 255);
            position: relative;
            font-family: 'Inter', sans-serif;
        }

        .form-box {
            background-color: rgb(16, 164, 236);
            box-shadow: 0 0 25px rgba(0, 0, 0, 0.25);
            color: white;
        }

        .input-container {
            position: relative;
            margin-bottom: 3.5rem;
            width: 100%;
        }

        .input-field {
            width: 100%;
            background: transparent;
            border: none;
            border-bottom: 2px solid rgba(255, 255, 255, 0.6);
            color: white;
            outline: none;
            font-size: 1rem;
            padding: 0.5rem 0;
            transition: border-color 0.2s ease, background-color 0.2s ease;
        }

            .input-field:focus {
                border-bottom-color: #fff;
            }

            .input-field:-webkit-autofill {
                -webkit-box-shadow: 0 0 0px 1000px rgb(16, 164, 236) inset !important;
                -webkit-text-fill-color: white !important;
                color: white !important;
            }

        .input-label {
            position: absolute;
            top: 0.5rem;
            left: 0;
            color: rgba(255, 255, 255, 0.8);
            font-size: 1rem;
            transition: 0.2s ease all;
            pointer-events: none;
        }

        .input-field:focus ~ .input-label,
        .input-field:not(:placeholder-shown) ~ .input-label,
        .input-field:-webkit-autofill ~ .input-label {
            top: -1.25rem;
            font-size: 0.875rem;
            color: #fff;
        }

        .submit-button {
            background-color: white;
            color: rgb(16, 164, 236);
            border: none;
            border-radius: 9999px;
            padding: 0.75rem 0;
            font-size: 1rem;
            margin-top: 1.5rem;
            transition: all 0.2s ease;
            cursor: pointer;
        }

            .submit-button:hover {
                background-color: rgb(2, 22, 38);
                color: white;
            }

        .client-msg {
            font-size: 0.75rem;
            color: firebrick;
            font-style: italic;
            font-weight: bold;
            margin-top: 0.25rem;
            position: absolute;
            bottom: -2.5rem;
            left: 0;
            white-space: nowrap;
        }

        .change-link {
            display: block;
            margin-top: 1rem;
            text-align: center;
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.875rem;
            text-decoration: none;
            transition: color 0.2s ease;
        }

            .change-link:hover {
                color: #fff;
                text-decoration: underline;
            }

        .alert-danger {
            background-color: #fee2e2;
            color: #b91c1c;
            border-color: #ef4444;
            padding: 0.5rem 1rem;
            border-radius: 0.25rem;
            margin-bottom: 1rem;
            text-align: center;
            font-size: 0.875rem;
            width: 100%;
        }

        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }

            .modal-overlay.show {
                opacity: 1;
                visibility: visible;
            }

        .modal-content {
            background-color: white;
            padding: 2.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
            text-align: center;
            max-width: 400px;
            width: 90%;
            position: relative;
            transform: translateY(-20px);
            transition: transform 0.3s ease, opacity 0.3s ease;
            opacity: 0;
        }

        .modal-overlay.show .modal-content {
            transform: translateY(0);
            opacity: 1;
        }

        .modal-close-btn {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #6b7280;
            cursor: pointer;
            transition: color 0.2s ease;
        }

            .modal-close-btn:hover {
                color: #1f2937;
            }

        .modal-title {
            font-size: 1.5rem;
            font-weight: bold;
            color: #1f2937;
            margin-bottom: 1rem;
        }

        .modal-message {
            font-size: 1rem;
            color: #374151;
            margin-bottom: 1.5rem;
        }

        .modal-icon {
            margin-bottom: 1rem;
            display: inline-block;
        }
    </style>
</head>
<body class="bg-blue-50 flex items-center justify-center min-h-screen">

    <div class="form-box w-[600px] h-[450px] p-10 rounded-xl flex flex-col justify-center items-center">

        <div class="flex items-center space-x-2 mb-6">
            <i data-lucide="scale" class="h-8 w-8 text-white"></i>
            <span class="text-xl font-bold text-white">NIW Solutions LLC</span>
        </div>

        <div class="form-title text-4xl font-extrabold mb-8">Login</div>

        <div class="form-content w-full max-w-sm">

            @if (ViewBag.Error != null)
            {
                <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
            }

            @using (Html.BeginForm("Login", "Login", FormMethod.Post, new { @class = "w-full", onsubmit = "return validateLogin();" }))
            {
                @Html.AntiForgeryToken()

                <div class="input-container">
                    @Html.TextBoxFor(m => m.Email, new { @class = "input-field", id = "email", placeholder = " ", type = "email", autocomplete = "username" })
                    <label class="input-label" for="email">Email</label>
                    <p id="email-error-msg" class="client-msg"></p>
                </div>

                <div class="input-container">
                    @Html.PasswordFor(m => m.PasswordHash, new { @class = "input-field", id = "password", placeholder = " ", autocomplete = "current-password" })
                    <label class="input-label" for="password">Password</label>
                    <p id="password-error-msg" class="client-msg"></p>
                </div>

                <button type="submit" class="submit-button w-full">Submit</button>
            }

            <a href="#" id="forgetPasswordLink" class="change-link">Forget password?</a>
        </div>
    </div>

    <div id="forgetPasswordModal" class="modal-overlay">
        <div class="modal-content">
            <button class="modal-close-btn" id="closeModalBtn">
                <i data-lucide="x"></i>
            </button>
            <div class="modal-icon">
                <i data-lucide="info" class="h-10 w-10 text-sky-500"></i>
            </div>
            <div class="modal-title">Password Reset</div>
            <p class="modal-message">
                Please contact the admin to reset your password.
            </p>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/lucide@latest"></script>
    <script>
        lucide.createIcons();

        document.getElementById("email").addEventListener("input", function () {
            document.getElementById("email-error-msg").innerText = "";
        });
        document.getElementById("password").addEventListener("input", function () {
            document.getElementById("password-error-msg").innerText = "";
        });

        function validateLogin() {
            const emailInput = document.getElementById("email");
            const passwordInput = document.getElementById("password");
            const emailErrorMsg = document.getElementById("email-error-msg");
            const passwordErrorMsg = document.getElementById("password-error-msg");

            let isValid = true;

            emailErrorMsg.innerText = "";
            passwordErrorMsg.innerText = "";

            const email = emailInput.value.trim();
            const password = passwordInput.value.trim();

            if (email === "") {
                emailErrorMsg.innerText = "Please enter your email.";
                isValid = false;
            }

            if (password === "") {
                passwordErrorMsg.innerText = "Password is required.";
                isValid = false;
            }

            return isValid;
        }

        document.addEventListener('DOMContentLoaded', function () {
            const emailInput = document.getElementById("email");
            const passwordInput = document.getElementById("password");

            setTimeout(() => {
                if (emailInput.value.trim() !== '') {
                    emailInput.classList.add('not-empty');
                }
                if (passwordInput.value.trim() !== '') {
                    passwordInput.classList.add('not-empty');
                }
            }, 100);
        });

        const forgetPasswordLink = document.getElementById('forgetPasswordLink');
        const forgetPasswordModal = document.getElementById('forgetPasswordModal');
        const closeModalBtn = document.getElementById('closeModalBtn');

        forgetPasswordLink.addEventListener('click', function (event) {
            event.preventDefault();
            forgetPasswordModal.classList.add('show');
            document.body.style.overflow = 'hidden';
        });

        closeModalBtn.addEventListener('click', function () {
            forgetPasswordModal.classList.remove('show');
            document.body.style.overflow = '';
        });

        forgetPasswordModal.addEventListener('click', function (event) {
            if (event.target === forgetPasswordModal) {
                forgetPasswordModal.classList.remove('show');
                document.body.style.overflow = '';
            }
        });
    </script>

</body>
</html>